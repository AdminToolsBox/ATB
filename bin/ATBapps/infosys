#!/bin/bash

## \file infosys
## \author William Le Pommelet
## \brief Shows system's basic information.
## \version 1.1.1
## \date November 27th 2014
## \param ip Stocks the IP address.
## \param hostamane Stocks the hostname.
## \param uptime Stocks the uptime.
## \param load1 Stocks the last minute load.
## \param load5 Stocks the last 5 minutes load.
## \param load15 Stocks the last 15 minutes load.
## \param ram Stocks the ram's quantity.
## \param nbcpu Stocks the number of CPU.
## \param nbcore Stocks the number of core per CPU.
## \param cpufreq Stocks the CPU's frequency.

## \fn infosys_help
## \brief Shows the help page of this script.
infosys_help()
{

	i18n_display "help"
	exit 0

}

## \fn infosys_syntaxError
## \brief Shows the error message after a wrong syntax call.
infosys_syntaxError()
{

	i18n_error "syntaxError"
	exit 1

}

## \fn infosys_calculateFreq
## \brief Calculate the CPU's frequency.
## \param f Stocks the differents values of the frequency in order to find the average.
## \param[out] freq Stock the CPU's frequency.
infosys_calculateFreq()
{
	local freq=0
	for f in `cat /proc/cpuinfo | grep "MHz" | cut --delimiter " " --fields 3`; do
		f=`echo $f | sed -re 's/^([0-9]+)\..*$/\1/g'`
		freq=$(( $freq + $f ))
	done
	
	freq=$(( $freq / $nbcore ))
	echo $freq

	return 0
}

## \fn infosys_display
## \brief Displays the system's information.
infosys_display()
{

	echo -e "\033[31m" # RED color
	i18n_display "globalinfo"
	echo -e "\n";
	i18n_display "hostname" $hostname
	i18n_display "ip" $ip
	i18n_display "uptime" $uptime
	i18n_display "last1charge"  "${load1%?} /  $(($nbcpu * $nbcore))"
	i18n_display "last5charge"  "${load5%?} / $(($nbcpu * $nbcore))"
	i18n_display "last15charge" "$load15 / $(($nbcpu * $nbcore))"
	#echo "Utilisateurs connect√© : " $USERS
	echo -e "\n"
	echo -e "\033[37m" # GREY color
	echo -e "#############################################################################################"
	echo -e "\033[32m" # GREEN color
	i18n_display "hardware"
	echo -e "\n";
	i18n_display "ram" "$ram Ko"
	i18n_display "nbcpu" "$nbcpu"
	i18n_display "nbcore" "$nbcore"
	i18n_display "freq" "$cpufreq Mhz"
	echo -e "\n"
	echo -e "\033[37m" # GREY color
	echo -e "#############################################################################################"
	echo -e "\033[36m" # PURPLE color
	i18n_display "disk"
	echo -e "\n";
	df --human-readable
	echo -e "\033[0m" # BLACK color

	return 0
}

## \fn infosys_main
## \brief Verify the arguments end call apropriate fontions.
## \param[in] * List of all the arguments passsed to the script.
## \return 0 - Normal end.
infosys_main()
{

	if [ $# -eq 0 ]; then
		infosys_display
	elif [ $# -eq 1 ] && ( [ "$1" = "--help" ] || [ "$1" = "-h" ] ); then 
		infosys_help
	else
		infosys_syntaxError
	fi

	return 0

}

## \cond DUMMY

ip=`ifconfig | grep -v '127.0.0.1' | grep "inet ad" | sed -re 's/^[ ]+(.*)$/\1/g' | cut --delimiter " " --fields 2 | cut --delimiter ":" --fields 2`
hostname=`hostname`
uptime=`uptime --pretty | cut --delimiter " " --fields 2-`
load1=`uptime | awk -F " " '{print $(NF-2)}'`
load5=`uptime | awk -F " " '{print $(NF-1)}'`
load15=`uptime | awk -F " " '{print $(NF)}'`
ram=`free | grep "Mem" | tr --squeeze-repeats " " | cut --delimiter " " --fields 2`
nbcpu=`cat /proc/cpuinfo | grep "physical id" | sort --uniq | wc --lines`
nbcore=`cat /proc/cpuinfo | grep "siblings" | sort --uniq | cut --delimiter ":" --fields 2 | sed -re 's/^[ ]+(.*)$/\1/g'`	
cpufreq=`infosys_calculateFreq`

source /usr/lib/ATB/alxdr-lib
export TEXTDOMAIN=infosys
clear
infosys_main $*
exit 0

## \endcond
